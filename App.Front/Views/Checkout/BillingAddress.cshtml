<!----BillingAddress-->
@using App.Aplication
@model App.Front.Models.Checkout.CheckoutBillingAddressModel

<section id="page-title">
    <div class="container clearfix">
        <ol class="breadcrumb col-md-6 col-sm-6">
            <li><a href="/">Trang chủ</a></li>

            <li class="active">Thông tin giao hàng</li>

        </ol>
    </div>
</section>

@if (Model != null)
{
    @Html.HiddenFor(model => model.NewAddress.Id)

    <div class="content billingaddress">
        <div class="wrap">
            <div class="sidebar">
                <div id="divCart" class="scroller" data-always-visible="1" data-rail-visible="0"></div>
            </div>
            <div class="main">
                <div class="main-header">
                    <a href="#" class="logo">
                        <h1 class="logo-text">
                            <div id="divCompanyName"></div>
                        </h1>
                    </a>
                </div>
                @using (Html.BeginForm("BillingAddress", "Checkout", FormMethod.Post, new { data_container = ViewContext.RouteData.Values["controller"], enctype = "multipart/form-data" }))
                {
                    <div class="main-content">
                        <div class="step">
                            <div class="step-sections " step="1">
                                <div class="section">
                                    <div class="section-header">
                                        <h2 class="section-title">Thông tin giao hàng</h2>
                                    </div>
                                    <div class="section-content section-customer-information ">

                                        <input name="utf8" type="hidden" value="✓">
                                        <div class="inventory_location_data hidden">
                                            <input name="customer_shipping_district" type="hidden" value="">
                                            <input name="customer_shipping_ward" type="hidden" value="">
                                        </div>
                                        <p class="section-content-text hidden">
                                            Bạn đã có tài khoản?
                                            <a href="#">Đăng nhập</a>
                                        </p>

                                        <div class="fieldset">

                                            <div class="field">
                                                <div class="field-input-wrapper">
                                                    <label class="field-label" for="billing_address_full_name">Họ và tên</label>
                                                    @Html.TextBoxFor(model => model.NewAddress.FirstName, new { @class = "field-input", @size = "30", @placeholder = "Họ và tên" })
                                                    @Html.ValidationMessageFor(model => model.NewAddress.FirstName, "", new { @class = "help-block" })
                                                </div>
                                            </div>

                                            <div class="field  field-two-thirds  ">
                                                <div class="field-input-wrapper">
                                                    <label class="field-label" for="checkout_user_email">Email</label>
                                                    @Html.TextBoxFor(model => model.NewAddress.Email, new { @class = "field-input", @size = "30", @placeholder = "Email", @autocapitalize = "off", @spellcheck = "false", @type = "email" })
                                                </div>

                                            </div>

                                            <div class="field field-required field-third  ">
                                                <div class="field-input-wrapper">
                                                    <label class="field-label" for="billing_address_phone">Số điện thoại</label>
                                                    @Html.TextBoxFor(model => model.NewAddress.PhoneNumber, new { @class = "field-input", @size = "11", @placeholder = "Số điện thoại" })
                                                    @Html.ValidationMessageFor(model => model.NewAddress.PhoneNumber, "", new { @class = "help-block" })
                                                </div>

                                            </div>

                                            <div class="field field-active">
                                                <div class="field-input-wrapper">
                                                    <label class="field-label" for="billing_address_address1">Địa chỉ</label>
                                                    @Html.TextBoxFor(model => model.NewAddress.Address1, new { @class = "field-input", @size = "30", @placeholder = "Địa chỉ" })
                                                    @Html.ValidationMessageFor(model => model.NewAddress.Address1, "", new { @class = "help-block" })
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="section-content">
                                        <div class="fieldset">

                                            <input name="utf8" type="hidden" value="✓">
                                            <div class="content-box mt0 hidden">
                                                <div class="radio-wrapper content-box-row">
                                                    <label class="radio-label">
                                                        <div class="radio-input">
                                                            <input type="radio" id="customer_pick_at_location_false" name="customer_pick_at_location" class="input-radio" value="false" checked="">
                                                        </div>
                                                        <span class="radio-label-primary">Giao tận nơi</span>
                                                    </label>
                                                </div>
                                                <div id="form_update_location_customer_shipping" class="radio-wrapper content-box-row content-box-row-padding content-box-row-secondary " for="customer_pick_at_location_false">
                                                    <input name="utf8" type="hidden" value="✓">
                                                    <div class="field field-half  ">
                                                        <div class="field-input-wrapper field-input-wrapper-select">
                                                            <label class="field-label" for="customer_shipping_province">Tỉnh / thành</label>
                                                            <select class="field-input" id="customer_shipping_province" name="customer_shipping_province">
                                                                <option data-code="null" value="null" selected="">Chọn tỉnh / thành</option>



                                                                <option data-code="HC" value="50">Hồ Chí Minh</option>



                                                                <option data-code="HI" value="1">Hà Nội</option>



                                                                <option data-code="DA" value="32">Đà Nẵng</option>



                                                                <option data-code="AG" value="57">An Giang</option>



                                                                <option data-code="BV" value="49">Bà Rịa - Vũng Tàu</option>



                                                                <option data-code="BG" value="15">Bắc Giang</option>



                                                                <option data-code="BK" value="4">Bắc Kạn</option>



                                                                <option data-code="BL" value="62">Bạc Liêu</option>



                                                                <option data-code="BN" value="18">Bắc Ninh</option>



                                                                <option data-code="BT" value="53">Bến Tre</option>



                                                                <option data-code="BD" value="35">Bình Định</option>



                                                                <option data-code="BI" value="47">Bình Dương</option>



                                                                <option data-code="BP" value="45">Bình Phước</option>



                                                                <option data-code="BU" value="39">Bình Thuận</option>



                                                                <option data-code="CM" value="63">Cà Mau</option>



                                                                <option data-code="CN" value="59">Cần Thơ</option>



                                                                <option data-code="CB" value="3">Cao Bằng</option>



                                                                <option data-code="DC" value="42">Đắk Lắk</option>



                                                                <option data-code="DO" value="43">Đắk Nông</option>



                                                                <option data-code="DB" value="7">Điện Biên</option>



                                                                <option data-code="DN" value="48">Đồng Nai</option>



                                                                <option data-code="DT" value="56">Đồng Tháp</option>



                                                                <option data-code="GL" value="41">Gia Lai</option>



                                                                <option data-code="HG" value="2">Hà Giang</option>



                                                                <option data-code="HM" value="23">Hà Nam</option>



                                                                <option data-code="HT" value="28">Hà Tĩnh</option>



                                                                <option data-code="HD" value="19">Hải Dương</option>



                                                                <option data-code="HP" value="20">Hải Phòng</option>



                                                                <option data-code="HU" value="60">Hậu Giang</option>



                                                                <option data-code="HO" value="11">Hòa Bình</option>



                                                                <option data-code="HY" value="21">Hưng Yên</option>



                                                                <option data-code="KH" value="37">Khánh Hòa</option>



                                                                <option data-code="KG" value="58">Kiên Giang</option>



                                                                <option data-code="KT" value="40">Kon Tum</option>



                                                                <option data-code="LI" value="8">Lai Châu</option>



                                                                <option data-code="LD" value="44">Lâm Đồng</option>



                                                                <option data-code="LS" value="13">Lạng Sơn</option>



                                                                <option data-code="LO" value="6">Lào Cai</option>



                                                                <option data-code="LA" value="51">Long An</option>



                                                                <option data-code="ND" value="24">Nam Định</option>



                                                                <option data-code="NA" value="27">Nghệ An</option>



                                                                <option data-code="NB" value="25">Ninh Bình</option>



                                                                <option data-code="NT" value="38">Ninh Thuận</option>



                                                                <option data-code="PT" value="16">Phú Thọ</option>



                                                                <option data-code="PY" value="36">Phú Yên</option>



                                                                <option data-code="QB" value="29">Quảng Bình</option>



                                                                <option data-code="QM" value="33">Quảng Nam</option>



                                                                <option data-code="QG" value="34">Quảng Ngãi</option>



                                                                <option data-code="QN" value="14">Quảng Ninh</option>



                                                                <option data-code="QT" value="30">Quảng Trị</option>



                                                                <option data-code="ST" value="61">Sóc Trăng</option>



                                                                <option data-code="SL" value="9">Sơn La</option>



                                                                <option data-code="TN" value="46">Tây Ninh</option>



                                                                <option data-code="TB" value="22">Thái Bình</option>



                                                                <option data-code="TY" value="12">Thái Nguyên</option>



                                                                <option data-code="TH" value="26">Thanh Hóa</option>



                                                                <option data-code="TT" value="31">Thừa Thiên Huế</option>



                                                                <option data-code="TG" value="52">Tiền Giang</option>



                                                                <option data-code="TV" value="54">Trà Vinh</option>



                                                                <option data-code="TQ" value="5">Tuyên Quang</option>



                                                                <option data-code="VL" value="55">Vĩnh Long</option>



                                                                <option data-code="VT" value="17">Vĩnh Phúc</option>



                                                                <option data-code="YB" value="10">Yên Bái</option>



                                                            </select>
                                                        </div>

                                                    </div>

                                                    <div class="field field-half  ">
                                                        <div class="field-input-wrapper field-input-wrapper-select">
                                                            <label class="field-label" for="customer_shipping_district">Quận / huyện</label>
                                                            <select class="field-input" id="customer_shipping_district" name="customer_shipping_district">
                                                                <option data-code="null" value="null" selected="">Chọn quận / huyện</option>

                                                            </select>
                                                        </div>

                                                    </div>


                                                </div>
                                                <div class="radio-wrapper content-box-row">
                                                    <label class="radio-label">
                                                        <div class="radio-input">
                                                            <input type="radio" id="customer_pick_at_location_true" name="customer_pick_at_location" class="input-radio" value="true">
                                                        </div>
                                                        <span class="radio-label-primary">Nhận tại cửa hàng</span>
                                                    </label>
                                                </div>

                                                <div id="form_update_location_customer_pick_at_location" class="radio-wrapper content-box-row content-box-row-secondary hidden" for="customer_pick_at_location_true">
                                                    <div class="blank-slate">Hiện tại chưa có bất kỳ thông tin cửa hàng nào</div>
                                                </div>

                                            </div>
                                            @*
                                                </form>*@

                                        </div>
                                    </div>
                                    <div id="change_pick_location_or_shipping">


                                    </div>
                                </div>
                            </div>
                            <div class="step-footer">

                                <input type="submit" id="nextstep" name="nextstep" class="hidden" />

                                <button class="step-footer-continue-btn btn" onclick="$('#nextstep').trigger('click');return false;">
                                    <span class="btn-content">Tiếp tục đến phương thức thanh toán</span>
                                    <i class="btn-spinner icon icon-button-spinner"></i>
                                </button>

                                <a class="step-footer-previous-link" href="@Url.Action("cart","ShoppingCart")">
                                    <svg class="previous-link-icon icon-chevron icon" xmlns="http://www.w3.org/2000/svg" width="6.7" height="11.3" viewBox="0 0 6.7 11.3">
                                        <path d="M6.7 1.1l-1-1.1-4.6 4.6-1.1 1.1 1.1 1 4.6 4.6 1-1-4.6-4.6z"></path>
                                    </svg>
                                    Giỏ hàng
                                </a>


                            </div>
                        </div>

                    </div>
                }
                <div class="main-footer">

                </div>
            </div>
        </div>

    </div>
}
@section stylesheets
{
    <link href="~/assets/global/checkouts.css" rel="stylesheet" />
    <link href="~/assets/global/check_out.css" rel="stylesheet" />


}

@section jquerys{
    <script src="~/assets/global/jquery.validate.js"></script>
}


<script type="text/javascript">
    //window.onpageshow = function (event) {
    //    if (event.persisted) {
    //        var currentUrl = '';


    //        currentUrl = 'http://mazzola.vn/checkouts/211de6556b5649cb85e8f171203b15e8?step=1';


    //        if (currentUrl)
    //            window.location = currentUrl;
    //    }
    //};



    //var isInit = false;

    //function funcFormOnSubmit(e) {

    //    if (!isInit) {
    //        isInit = true;

    //        $.fn.tagName = function () {
    //            return this.prop("tagName").toLowerCase();
    //        };
    //    }

    //    if (typeof (e) == 'string') {
    //        var element = $(e);
    //        var formData = e;
    //    } else {
    //        var element = this;
    //        var formData = this;
    //        e.preventDefault();
    //    }

    //    $(element).find('button:submit').addClass('btn-loading');

    //    var formId = $(element).attr('id'), replaceElement = [], funcCallback;

    //    if (formId == undefined || formId == null || formId == '')
    //        return;



    //    if (formId == 'form_next_step') {
    //        formData = '.section-customer-information';
    //        replaceElement.push('.step-sections');
    //    }
    //    else if (
    //        formId == 'form_discount_add'
    //        || formId == 'form_discount_remove'
    //        || formId == 'form_update_location'

    //            || formId == 'form_update_shipping_method'

    //        ) {
    //        replaceElement.push('#form_update_location');
    //        replaceElement.push('.inventory_location');
    //        replaceElement.push('.inventory_location_data');
    //        replaceElement.push('.order-summary-toggle-inner .order-summary-toggle-total-recap');
    //        replaceElement.push('.order-summary-sections');
    //    }



    //    if (formId == 'form_update_location_customer_shipping') {
    //        formId = 'form_update_location';
    //        replaceElement.push('#form_update_location_customer_shipping');
    //        replaceElement.push('.inventory_location');
    //        replaceElement.push('.inventory_location_data');
    //        replaceElement.push('.order-summary-toggle-inner .order-summary-toggle-total-recap');
    //        replaceElement.push('.order-summary-sections');
    //    }
    //    if (formId == 'form_update_location_customer_pick_at_location') {
    //        formId = 'form_update_location';
    //        replaceElement.push('#form_update_location_customer_pick_at_location');
    //        replaceElement.push('.inventory_location');
    //        replaceElement.push('.inventory_location_data');
    //        replaceElement.push('.order-summary-toggle-inner .order-summary-toggle-total-recap');
    //        replaceElement.push('.order-summary-sections');
    //    }





    //    if (!$(formData) || $(formData).length == 0) {
    //        window.location.reload();
    //        return false;
    //    }

    //    if ($(formData).tagName() != 'form')
    //        formData += ' :input';

    //    $.ajax({
    //        type: 'GET',
    //        url: window.location.origin + window.location.pathname + '?' + $(formData).serialize() + encodeURI('&form_name=' + formId),
    //        success: function (html) {

    //            if ($(html).attr('id') == 'redirect-url') {
    //                window.location = $(html).val();
    //            } else {
    //                if (replaceElement.length > 0) {
    //                    for (var i = 0; i < replaceElement.length; i++) {
    //                        var tempElement = replaceElement[i];
    //                        var newElement = $(html).find(tempElement);

    //                        if (newElement.length > 0) {
    //                            if (tempElement == '.step-sections')
    //                                $(tempElement).attr('step', $(newElement).attr('step'));

    //                            var listTempElement = $(tempElement);

    //                            for (var j = 0; j < newElement.length; j++)
    //                                if (j < listTempElement.length)
    //                                    $(listTempElement[j]).html($(newElement[j]).html());
    //                        }
    //                    }
    //                }

    //                $('body').attr('src', $(html).attr('src'));
    //                $(element).find('button:submit').removeClass('btn-loading');

    //                if (($('body').find('.field-error') && $('body').find('.field-error').length > 0)
    //                    || ($('body').find('.has-error') && $('body').find('.has-error').length > 0))
    //                    $("html, body").animate({ scrollTop: 0 }, "slow");

    //                if (funcCallback)
    //                    funcCallback();
    //            }
    //        }
    //    });

    //    return false;
    //};
    //function funcSetEvent() {
    //    var effectControlFieldClass = '.field input, .field select, .field textarea';

    //    $('body')
    //        .on('focus', effectControlFieldClass, function () {
    //            funcFieldFocus($(this), true);
    //        })
    //        .on('blur', effectControlFieldClass, function () {
    //            funcFieldFocus($(this), false);
    //            funcFieldHasValue($(this), true);
    //        })
    //        .on('keyup input paste', effectControlFieldClass, function () {
    //            funcFieldHasValue($(this), false);
    //        })
    //        .on('submit', 'form', funcFormOnSubmit);





    //    $('body')
    //        .on('change', '#form_update_location_customer_shipping', function () {
    //            funcFormOnSubmit('#form_update_location_customer_shipping');
    //        })
    //        .on('change', '#form_update_location_customer_pick_at_location', function () {
    //            funcFormOnSubmit('#form_update_location_customer_pick_at_location');
    //        });



    //    $('body')
    //        .on('change', '#form_update_location select[name=customer_shipping_district]', function () {
    //            $('.section-customer-information input:hidden[name=customer_shipping_district]').val($(this).val());
    //        })
    //        .on('change', '#form_update_location select[name=customer_shipping_ward]', function () {
    //            $('.section-customer-information input:hidden[name=customer_shipping_ward]').val($(this).val());
    //        });



    //    $('body')
    //        .on('change', '#form_update_shipping_method input:radio', function () {
    //            $('#form_update_shipping_method .content-box-row.content-box-row-secondary').addClass('hidden');

    //            var id = $(this).attr('id');

    //            if (id) {
    //                var sub = $('body').find('.content-box-row.content-box-row-secondary[for=' + id + ']')

    //                if (sub && sub.length > 0) {
    //                    $(sub).removeClass('hidden');
    //                }
    //            }
    //        });






    //    $('body')
    //        .on('change', '#form_update_shipping_method input:radio[name=customer_pick_at_location]', function () {
    //            var methodValue = $(this).val();

    //            if (methodValue && methodValue == 'false')
    //                $('.inventory_location').hide();
    //            else
    //                $('.inventory_location').show();

    //            $('#form_update_shipping_method').submit();
    //        })
    //        .on('change', '.inventory_location input:radio[name=inventory_location_id]', function () {
    //            $('.section-customer-information input:hidden[name=inventory_location_id]').val($(this).val());
    //        });


    //};
    //function funcFieldFocus(fieldInputElement, isFocus) {
    //    if (fieldInputElement == undefined)
    //        return;

    //    var fieldElement = $(fieldInputElement).closest('.field');

    //    if (fieldElement == undefined)
    //        return;

    //    if (isFocus)
    //        $(fieldElement).addClass('field-active');
    //    else
    //        $(fieldElement).removeClass('field-active');
    //};
    //function funcFieldHasValue(fieldInputElement, isCheckRemove) {
    //    if (fieldInputElement == undefined)
    //        return;

    //    var fieldElement = $(fieldInputElement).closest('.field');

    //    if (fieldElement == undefined)
    //        return;

    //    if ($(fieldElement).find('.field-input-wrapper-select').length > 0) {
    //        var value = $(fieldInputElement).find(':selected').val();

    //        if (value == 'null')
    //            value = undefined;
    //    } else {
    //        var value = $(fieldInputElement).val();
    //    }

    //    if (!isCheckRemove) {
    //        if (value != $(fieldInputElement).attr('value'))
    //            $(fieldElement).removeClass('field-error');
    //    }

    //    var fieldInputBtnWrapperElement = $(fieldInputElement).closest('.field-input-btn-wrapper');

    //    if (value && value.trim() != '') {
    //        $(fieldElement).addClass('field-show-floating-label');
    //        $(fieldInputBtnWrapperElement).find('button:submit').removeClass('btn-disabled');
    //    }
    //    else if (isCheckRemove) {
    //        $(fieldElement).removeClass('field-show-floating-label');
    //        $(fieldInputBtnWrapperElement).find('button:submit').addClass('btn-disabled');
    //    }
    //    else {
    //        $(fieldInputBtnWrapperElement).find('button:submit').addClass('btn-disabled');
    //    }
    //};
    //function funcInit() {
    //    funcSetEvent();


    //}
    //$(document).ready(function () {
    //    //funcInit();
    //});
</script>

@*
    <script type="text/javascript">
            var toggleShowOrderSummary = false;
            $(document).ready(function () {
                var currentUrl = '';


                currentUrl = 'http://mazzola.vn/checkouts/211de6556b5649cb85e8f171203b15e8?step=1';


                if ($('#reloadValue').val().length == 0) {
                    $('#reloadValue').val(currentUrl);
                    $('body').show();
                }
                else {
                    window.location = $('#reloadValue').val();
                    $('#reloadValue').val('');
                }

                $('body')
                    .on('click', '.order-summary-toggle', function () {
                        toggleShowOrderSummary = !toggleShowOrderSummary;

                        if (toggleShowOrderSummary) {
                            $('.order-summary-toggle')
                                .removeClass('order-summary-toggle-hide')
                                .addClass('order-summary-toggle-show');

                            $('.sidebar:not(".sidebar-second") .sidebar-content .order-summary')
                                .removeClass('order-summary-is-collapsed')
                                .addClass('order-summary-is-expanded');

                            $('.sidebar.sidebar-second .sidebar-content .order-summary')
                                .removeClass('order-summary-is-expanded')
                                .addClass('order-summary-is-collapsed');
                        } else {
                            $('.order-summary-toggle')
                                .removeClass('order-summary-toggle-show')
                                .addClass('order-summary-toggle-hide');

                            $('.sidebar:not(".sidebar-second") .sidebar-content .order-summary')
                                .removeClass('order-summary-is-expanded')
                                .addClass('order-summary-is-collapsed');

                            $('.sidebar.sidebar-second .sidebar-content .order-summary')
                                .removeClass('order-summary-is-collapsed')
                                .addClass('order-summary-is-expanded');
                        }
                    });
            });
    </script>*@



<style>
    #wrapper {
        background: none !important;
    }
</style>


<script>
    jQuery(function () {

       jQuery.post('@Url.Action("GetSystemSetting", "Summary")')
            .done(function (data) {
                if (data.list !=null) {
                    jQuery("#divCompanyName").html(data.list.Title);
                }

        });


        jQuery.post('@Url.Action("CartByCustomer", "Checkout")')
           .done(function (data) {
               jQuery("#divCart").html(data.list);
           });
    })

</script>

<!----/BillingAddress-->